/*
 * This file is generated by jOOQ.
 */
package com.eval.jooq.tables.records;


import com.eval.jooq.tables.Sales;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SalesRecord extends UpdatableRecordImpl<SalesRecord> implements Record10<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Double, Double, Timestamp> {

    private static final long serialVersionUID = 1298301376;

    /**
     * Setter for <code>eval.sales.sales_id</code>.
     */
    public SalesRecord setSalesId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.sales_id</code>.
     */
    public Integer getSalesId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>eval.sales.listing_id</code>.
     */
    public SalesRecord setListingId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.listing_id</code>.
     */
    public Integer getListingId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>eval.sales.seller_id</code>.
     */
    public SalesRecord setSellerId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.seller_id</code>.
     */
    public Integer getSellerId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>eval.sales.buyer_id</code>.
     */
    public SalesRecord setBuyerId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.buyer_id</code>.
     */
    public Integer getBuyerId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>eval.sales.event_id</code>.
     */
    public SalesRecord setEventId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.event_id</code>.
     */
    public Integer getEventId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>eval.sales.date_id</code>.
     */
    public SalesRecord setDateId(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.date_id</code>.
     */
    public Integer getDateId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>eval.sales.quantity_sold</code>.
     */
    public SalesRecord setQuantitySold(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.quantity_sold</code>.
     */
    public Integer getQuantitySold() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>eval.sales.price_paid</code>.
     */
    public SalesRecord setPricePaid(Double value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.price_paid</code>.
     */
    public Double getPricePaid() {
        return (Double) get(7);
    }

    /**
     * Setter for <code>eval.sales.commission_amount</code>.
     */
    public SalesRecord setCommissionAmount(Double value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.commission_amount</code>.
     */
    public Double getCommissionAmount() {
        return (Double) get(8);
    }

    /**
     * Setter for <code>eval.sales.sale_timestamp</code>.
     */
    public SalesRecord setSaleTimestamp(Timestamp value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>eval.sales.sale_timestamp</code>.
     */
    public Timestamp getSaleTimestamp() {
        return (Timestamp) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Double, Double, Timestamp> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row10<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Double, Double, Timestamp> valuesRow() {
        return (Row10) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Sales.SALES.SALES_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Sales.SALES.LISTING_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Sales.SALES.SELLER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field4() {
        return Sales.SALES.BUYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Sales.SALES.EVENT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Sales.SALES.DATE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Sales.SALES.QUANTITY_SOLD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field8() {
        return Sales.SALES.PRICE_PAID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Double> field9() {
        return Sales.SALES.COMMISSION_AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field10() {
        return Sales.SALES.SALE_TIMESTAMP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getSalesId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getListingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getSellerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component4() {
        return getBuyerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component5() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getDateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component7() {
        return getQuantitySold();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component8() {
        return getPricePaid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double component9() {
        return getCommissionAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component10() {
        return getSaleTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getSalesId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getListingId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSellerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value4() {
        return getBuyerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getEventId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getDateId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getQuantitySold();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value8() {
        return getPricePaid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value9() {
        return getCommissionAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value10() {
        return getSaleTimestamp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value1(Integer value) {
        setSalesId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value2(Integer value) {
        setListingId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value3(Integer value) {
        setSellerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value4(Integer value) {
        setBuyerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value5(Integer value) {
        setEventId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value6(Integer value) {
        setDateId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value7(Integer value) {
        setQuantitySold(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value8(Double value) {
        setPricePaid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value9(Double value) {
        setCommissionAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord value10(Timestamp value) {
        setSaleTimestamp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SalesRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Double value8, Double value9, Timestamp value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SalesRecord
     */
    public SalesRecord() {
        super(Sales.SALES);
    }

    /**
     * Create a detached, initialised SalesRecord
     */
    public SalesRecord(Integer salesId, Integer listingId, Integer sellerId, Integer buyerId, Integer eventId, Integer dateId, Integer quantitySold, Double pricePaid, Double commissionAmount, Timestamp saleTimestamp) {
        super(Sales.SALES);

        set(0, salesId);
        set(1, listingId);
        set(2, sellerId);
        set(3, buyerId);
        set(4, eventId);
        set(5, dateId);
        set(6, quantitySold);
        set(7, pricePaid);
        set(8, commissionAmount);
        set(9, saleTimestamp);
    }
}
