/*
 * This file is generated by jOOQ.
 */
package com.eval.jooq.tables;


import com.eval.jooq.Eval;
import com.eval.jooq.Indexes;
import com.eval.jooq.Keys;
import com.eval.jooq.tables.records.VenuesRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Venues extends TableImpl<VenuesRecord> {

    private static final long serialVersionUID = 542935608;

    /**
     * The reference instance of <code>eval.venues</code>
     */
    public static final Venues VENUES = new Venues();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VenuesRecord> getRecordType() {
        return VenuesRecord.class;
    }

    /**
     * The column <code>eval.venues.venue_id</code>.
     */
    public final TableField<VenuesRecord, Integer> VENUE_ID = createField("venue_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>eval.venues.venue_name</code>.
     */
    public final TableField<VenuesRecord, String> VENUE_NAME = createField("venue_name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eval.venues.city</code>.
     */
    public final TableField<VenuesRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eval.venues.venue_state</code>.
     */
    public final TableField<VenuesRecord, String> VENUE_STATE = createField("venue_state", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>eval.venues.seating_capacity</code>.
     */
    public final TableField<VenuesRecord, Integer> SEATING_CAPACITY = createField("seating_capacity", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>eval.venues</code> table reference
     */
    public Venues() {
        this(DSL.name("venues"), null);
    }

    /**
     * Create an aliased <code>eval.venues</code> table reference
     */
    public Venues(String alias) {
        this(DSL.name(alias), VENUES);
    }

    /**
     * Create an aliased <code>eval.venues</code> table reference
     */
    public Venues(Name alias) {
        this(alias, VENUES);
    }

    private Venues(Name alias, Table<VenuesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Venues(Name alias, Table<VenuesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Venues(Table<O> child, ForeignKey<O, VenuesRecord> key) {
        super(child, key, VENUES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Eval.EVAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VENUES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<VenuesRecord> getPrimaryKey() {
        return Keys.KEY_VENUES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VenuesRecord>> getKeys() {
        return Arrays.<UniqueKey<VenuesRecord>>asList(Keys.KEY_VENUES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Venues as(String alias) {
        return new Venues(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Venues as(Name alias) {
        return new Venues(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Venues rename(String name) {
        return new Venues(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Venues rename(Name name) {
        return new Venues(name, null);
    }
}
