buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.5.RELEASE")
        classpath 'nu.studer:gradle-jooq-plugin:3.0.3'
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.2.4"
    id "java"
    id "idea"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nu.studer.jooq'

ext['jooq.version'] = '3.11.9'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}
configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}



dependencies {
    // allow live reload. If using intellij see: https://www.romaniancoder.com/spring-boot-live-reload-with-intellij/
    developmentOnly("org.springframework.boot:spring-boot-devtools")

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.3.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.1.3.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-jooq
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jooq', version: '2.1.3.RELEASE'

    // https://mvnrepository.com/artifact/org.jooq/jooq
    compile group: 'org.jooq', name: 'jooq', version: '3.11.9'

    // need to put mysql connector on jooq RT
    jooqRuntime group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    // should be compatible with mysql 5.5 and up.
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'

    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1'

    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    // https://mvnrepository.com/artifact/io.springfox/springfox-swagger2
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

    // This dependency is found on compile classpath of this component and consumers.
    // https://mvnrepository.com/artifact/org.flywaydb/flyway-core
    compile group: 'org.flywaydb', name: 'flyway-core', version: '5.2.4'

    testCompile 'junit:junit:4.12'
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest-core
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '2.1'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    testCompile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
}

// flyway config.
flyway {
    url = 'jdbc:mysql://192.168.99.100:3306/eval'
    user = 'admin'
    password = 'admin'
}

// jooq config
jooq {
    eval(sourceSets.main) {
        jdbc {
            driver = 'com.mysql.jdbc.Driver'
            url = 'jdbc:mysql://192.168.99.100:3306/eval' // set to gitlab container convention.
            user = 'admin'
            password = 'admin'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                inputSchema = 'eval'
                excludes = 'flyway_schema_history' // don't need to map flyway table
                forcedTypes {
                    forcedType {
                        name = 'BOOLEAN'
                        types = 'tinyint'
                    }
                }
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'com.eval.jooq'
                directory = 'src/main/java'
            }
        }
    }
}

/**
 * Remove jooq generation from build as it will re-create all files even with no change and make git freak out.
 */
project.tasks.getByName(project.sourceSets.main.compileJavaTaskName).dependsOn.remove("generateEvalJooqSchemaSource")

